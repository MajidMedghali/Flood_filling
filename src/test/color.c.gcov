        -:    0:Source:../color.c
        -:    1:#include <stdio.h>
        -:    2:#include <stdlib.h>
        -:    3:#include <string.h>
        -:    4:#include "color.h"
        -:    5:#include <math.h>
        -:    6:#include <time.h>
        -:    7:
        -:    8:
        -:    9:
        -:   10:
      144:   11:const char* color_to_string(enum color_t c){ 
        -:   12:  const char* b;//malloc(sizeof(*b));
      144:   13:  b="BLUE";
        -:   14:  const char* r;//malloc(sizeof(*r));
      144:   15:  r="RED";
        -:   16:  const char* g;//=malloc(sizeof(*g));
      144:   17:  g="GREEN";
        -:   18:  const char* y;//=malloc(sizeof(*y));
      144:   19:  y="YELLOW";
        -:   20:  const char* o;//=malloc(sizeof(*o));
      144:   21:  o="ORANGE";
        -:   22:  const char* v;//=malloc(sizeof(*v));
      144:   23:  v="VIOLET";
        -:   24:  const char* C;//=malloc(sizeof(*C));
      144:   25:  C="CYAN";
        -:   26:  const char* p;//=malloc(sizeof(*p));
      144:   27:  p="PINK";
      144:   28:  switch((int)c){
       18:   29:  case 0:
       18:   30:    return b;
        -:   31:    break;
       18:   32:  case 1:
       18:   33:    return r;
        -:   34:    break;
       18:   35:  case 2:
       18:   36:    return g;
        -:   37:    break;
       18:   38:  case 3:
       18:   39:    return y;
        -:   40:    break;
       18:   41:  case 4:
       18:   42:    return o;
        -:   43:    break;
       18:   44:  case 5:
       18:   45:    return v;
        -:   46:    break;
       18:   47:  case 6:
       18:   48:    return C;
        -:   49:    break;
       18:   50:  case 7:
       18:   51:    return p;
        -:   52:    break;
        -:   53:  }
    #####:   54:  return "No Color";
        -:   55:}
        -:   56:
        -:   57:/*
        -:   58: int main(int argc, char* argv[]){
        -:   59:    srand(time(NULL));
        -:   60:    enum color_t d=BLUE;
        -:   61:    printf("%s\n",color_to_string(d));
        -:   62:    //afficher(initialise(100),100);
        -:   63:    //color_to_string(c);
        -:   64:
        -:   65:
        -:   66:    return 0;
        -:   67:    }*/
        -:   68:
